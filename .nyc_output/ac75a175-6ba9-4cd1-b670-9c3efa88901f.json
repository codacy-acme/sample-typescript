{"/Users/rngw/Documents/typescript-demo/sample-typescript/src/services/UserService.ts":{"path":"/Users/rngw/Documents/typescript-demo/sample-typescript/src/services/UserService.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":31}},"3":{"start":{"line":9,"column":8},"end":{"line":11,"column":9}},"4":{"start":{"line":10,"column":12},"end":{"line":10,"column":70}},"5":{"start":{"line":12,"column":8},"end":{"line":12,"column":36}},"6":{"start":{"line":13,"column":8},"end":{"line":13,"column":38}},"7":{"start":{"line":16,"column":8},"end":{"line":16,"column":34}},"8":{"start":{"line":19,"column":8},"end":{"line":19,"column":47}},"9":{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},"10":{"start":{"line":23,"column":12},"end":{"line":23,"column":65}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":38}},"12":{"start":{"line":28,"column":8},"end":{"line":28,"column":37}},"13":{"start":{"line":31,"column":0},"end":{"line":31,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":18},"end":{"line":7,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":18},"end":{"line":14,"column":5}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":16},"end":{"line":17,"column":5}},"line":15},"3":{"name":"(anonymous_3)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":18},"end":{"line":20,"column":5}},"line":18},"4":{"name":"(anonymous_4)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":21},"end":{"line":26,"column":5}},"line":21},"5":{"name":"(anonymous_5)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":19},"end":{"line":29,"column":5}},"line":27}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":8},"end":{"line":11,"column":9}},"type":"if","locations":[{"start":{"line":9,"column":8},"end":{"line":11,"column":9}},{"start":{"line":9,"column":8},"end":{"line":11,"column":9}}],"line":9},"1":{"loc":{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},{"start":{"line":22,"column":8},"end":{"line":24,"column":9}}],"line":22}},"s":{"0":1,"1":1,"2":4,"3":4,"4":1,"5":3,"6":3,"7":2,"8":1,"9":0,"10":0,"11":0,"12":0,"13":1},"f":{"0":4,"1":4,"2":2,"3":1,"4":0,"5":0},"b":{"0":[1,3],"1":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/rngw/Documents/typescript-demo/sample-typescript/src/services/UserService.ts","sources":["/Users/rngw/Documents/typescript-demo/sample-typescript/src/services/UserService.ts"],"names":[],"mappings":";;;AAEA,MAAa,WAAW;IAAxB;QACY,UAAK,GAAsB,IAAI,GAAG,EAAE,CAAC;IA4BjD,CAAC;IA1BG,OAAO,CAAC,IAAU;QACd,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;YAC1B,MAAM,IAAI,KAAK,CAAC,gBAAgB,IAAI,CAAC,EAAE,iBAAiB,CAAC,CAAC;QAC9D,CAAC;QACD,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,OAAO,CAAC,EAAU;QACd,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC9B,CAAC;IAED,WAAW;QACP,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;IAC3C,CAAC;IAED,UAAU,CAAC,IAAU;QACjB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;YAC3B,MAAM,IAAI,KAAK,CAAC,gBAAgB,IAAI,CAAC,EAAE,YAAY,CAAC,CAAC;QACzD,CAAC;QACD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,UAAU,CAAC,EAAU;QACjB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC;CACJ;AA7BD,kCA6BC","sourcesContent":["import { User } from '../models/User';\n\nexport class UserService {\n    private users: Map<number, User> = new Map();\n\n    addUser(user: User): void {\n        if (this.users.has(user.id)) {\n            throw new Error(`User with id ${user.id} already exists`);\n        }\n        user.createdAt = new Date();\n        this.users.set(user.id, user);\n    }\n\n    getUser(id: number): User | undefined {\n        return this.users.get(id);\n    }\n\n    getAllUsers(): User[] {\n        return Array.from(this.users.values());\n    }\n\n    updateUser(user: User): void {\n        if (!this.users.has(user.id)) {\n            throw new Error(`User with id ${user.id} not found`);\n        }\n        this.users.set(user.id, user);\n    }\n\n    deleteUser(id: number): boolean {\n        return this.users.delete(id);\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"abb33f1858a7c86a5228a31cce2a9eb34443f508","contentHash":"6647de56c7fa5d810261171b2767480d0fa420971bc17308c448deed5a2c4e1b"}}